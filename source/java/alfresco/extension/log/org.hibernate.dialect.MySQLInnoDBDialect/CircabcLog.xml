<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE sqlMap
    PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="CircabcLog">

   <typeAlias alias="LogRecord" type="eu.cec.digit.circabc.repo.log.LogRecordDAO"/>
   <typeAlias alias="LogActivity" type="eu.cec.digit.circabc.repo.log.LogActivityDAO"/>
   <typeAlias alias="LogSearchParameter" type="eu.cec.digit.circabc.repo.log.LogSearchParameterDAO"/>
   <typeAlias alias="LogSearchLimitParameter" type="eu.cec.digit.circabc.repo.log.LogSearchLimitParameterDAO"/>
   <typeAlias alias="LogSearchResult" type="eu.cec.digit.circabc.repo.log.LogSearchResultDAO"/>
   <typeAlias alias="LogCountResult" type="eu.cec.digit.circabc.repo.log.LogCountResultDAO"/>
   <typeAlias alias="ActivityCount" type="eu.cec.digit.circabc.repo.log.ActivityCountDAO"/>

   <select id="select_log_records" parameterClass="LogSearchParameter" resultClass="LogSearchResult" >
		 select user_name  as userName ,
		 cbc_log_activity.service_desc as serviceDescription,
		 cbc_log_activity.activity_desc as activityDescription,
		 log_date  as logDate ,
		 info as  info  ,
		 path as  path  ,
		 isok as isOK
		 from cbc_log , cbc_log_activity
		 where cbc_log.activity_id = cbc_log_activity.id
		and ig_id = #igID#
		and log_date between #fromDate# and #toDate#
		<dynamic>
			<isNotNull prepend="AND" property="userName">
				user_name=#userName#
			</isNotNull>
			<isNotNull prepend="AND" property="serviceDescription">
				cbc_log_activity.service_desc = #serviceDescription#
			</isNotNull>
			<isNotNull prepend="AND" property="activityDescription">
				cbc_log_activity.activity_desc= #activityDescription#
			</isNotNull>
		</dynamic>
		order by log_date desc

   </select>

   <select id="select_item_history" parameterClass="Long" resultClass="LogSearchResult" >
		 select user_name  as userName ,
		 cbc_log_activity.service_desc as serviceDescription,
		 cbc_log_activity.activity_desc as activityDescription,
		 log_date  as logDate ,
		 info as  info  ,
		 path as  path  ,
		 isok as isOK
		 from cbc_log , cbc_log_activity
		 where cbc_log.activity_id = cbc_log_activity.id
		and document_id = #documentID#
		order by log_date desc
   </select>

	<select id="select_log_records_count" parameterClass="LogSearchParameter" resultClass="Integer" >
		 select count(*)
		 from cbc_log , cbc_log_activity
		 where cbc_log.activity_id = cbc_log_activity.id
		and ig_id = #igID#
		and log_date between #fromDate# and #toDate#
		<dynamic>
			<isNotNull prepend="AND" property="userName">
				user_name=#userName#
			</isNotNull>
			<isNotNull prepend="AND" property="serviceDescription">
				cbc_log_activity.service_desc = #serviceDescription#
			</isNotNull>
			<isNotNull prepend="AND" property="activityDescription">
				cbc_log_activity.activity_desc= #activityDescription#
			</isNotNull>
		</dynamic>
   </select>

   <select id="select_log_records_page" parameterClass="LogSearchLimitParameter" resultClass="LogSearchResult" >
		 select user_name  as userName ,
		 cbc_log_activity.service_desc as serviceDescription,
		 cbc_log_activity.activity_desc as activityDescription,
		 log_date  as logDate ,
		 info as  info  ,
		 path as  path  ,
		 isok as isOK
		 from cbc_log , cbc_log_activity
		 where cbc_log.activity_id = cbc_log_activity.id
		and ig_id = #igID#
		and log_date between #fromDate# and #toDate#
		<dynamic>
			<isNotNull prepend="AND" property="userName">
				user_name=#userName#
			</isNotNull>
			<isNotNull prepend="AND" property="serviceDescription">
				cbc_log_activity.service_desc = #serviceDescription#
			</isNotNull>
			<isNotNull prepend="AND" property="activityDescription">
				cbc_log_activity.activity_desc= #activityDescription#
			</isNotNull>
		</dynamic>
		order by log_date desc
		limit #startRecord#,#pageSize#
   </select>

   <select id="select_log_activity"  resultClass="LogActivity">
      <![CDATA[
      select
         id as id,
         service_desc as serviceDescription ,
         activity_desc as activityDescription
      from
         cbc_log_activity
      ]]>
   </select>

   <insert id="insert_log_record" parameterClass="LogRecord">
      insert into cbc_log (ig_id,document_id,user_name,log_date,activity_id,ig_name,info,path,isok)
      values (#igID#,#documentID#,#user#,#date#,#activityID#,#igName#,#info#,#path#,#isOK#)
	 <selectKey resultClass="long" keyProperty="id" >
         select LAST_INSERT_ID() AS value
      </selectKey>
   </insert>

   <select id="select_activity_id" resultClass="integer" parameterClass="LogActivity">
      select *
      from cbc_log_activity
      where service_desc = #serviceDescription# and  activity_desc=#activityDescription#
   </select>


   <insert id="insert_activity" parameterClass="LogActivity">
      insert into cbc_log_activity (service_desc,activity_desc)
      values (#serviceDescription#,#activityDescription#)
      <selectKey resultClass="int" keyProperty="id" >
         select LAST_INSERT_ID() AS value
      </selectKey>
   </insert>
   
   <delete id="delete_log_by_ig" parameterClass="Long" >
      delete from  cbc_log where ig_id = #igID#
   </delete>
   
      <select id="select_last_login_date_of_user" resultClass="Date" parameterClass="String">
   		select max(log_date) as last_login_date 
   		from cbc_log 
   		where user_name=#username# 
   		and activity_id= (select cbc_log_activity.id from cbc_log_activity where activity_desc='Login')
   </select>
   
   <select id="select_count_actions_per_hour_yesterday" resultClass="LogCountResult">
   		select DATE_FORMAT(log_date, '%H') as hourPeriod, count(*) as numberOfActions
		from cbc_log
		where log_date &gt;=  DATE_SUB(CURDATE(), INTERVAL 1 DAY) and  log_date &lt; CURDATE()
		group by DATE_FORMAT(log_date, '%H')
		order by hourPeriod
   </select>
   
   <select id="select_activity_of_interest_group" parameterClass="Long" resultClass="ActivityCount">
   		select  DATE_FORMAT(log_date, '%m %Y') as monthActivity, service_desc as service, activity_desc as activity, activity_id as activityId, count(*) as actionNumber
		from cbc_log, cbc_log_activity
		where cbc_log.activity_id = cbc_log_activity.id
		and ig_id=#igID#
		group by  DATE_FORMAT(log_date, '%m %Y'), service_desc,  activity_desc, activity_id
		having activity_id=(select id from cbc_log_activity where activity_desc = 'Download content' and service_desc='Library')
		or activity_id=(select id from cbc_log_activity where activity_desc = 'Upload document' and service_desc='Library')
		or activity_id=(select id from cbc_log_activity where activity_desc = 'Create post' and service_desc='Newsgroup')
		or activity_id=(select id from cbc_log_activity where activity_desc = 'Read post' and service_desc='Newsgroup')
		or activity_id=(select id from cbc_log_activity where activity_desc = 'Add user and allocate profile' and service_desc='Administration')
		or activity_id=(select id from cbc_log_activity where activity_desc = 'Remove membership' and service_desc='Administration')
		order by 1 desc, 2
   </select>

</sqlMap>