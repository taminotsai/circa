<?xml version='1.0' encoding='UTF-8'?>
<!--+
    |     Copyright European Community 2006 - Licensed under the EUPL V.1.0
    |
    |  		   http://ec.europa.eu/idabc/en/document/6523
    |
    +-->
<!DOCTYPE beans PUBLIC '-//SPRING//DTD BEAN//EN' 'http://www.springframework.org/dtd/spring-beans-2.0.dtd'>
<beans>
    <import resource="classpath:alfresco/extension/circabc-public-services-security-context.xml" />

	<!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
	<!-- You specify here Spring beans related to CIRCABC                 -->
	<!-- You DO NOT MODIFY here beans related to Alfresco                 -->
	<!-- File whas previously named: circabc-beans-context.xml              -->

    <!-- Service Registry -->

    <!-- Exception Translation -->

    <!-- Descriptor Service -->


    <!-- AuditMethodInterceptor -->
    <bean id="AuditMethodInterceptor" class="org.alfresco.repo.audit.AuditMethodInterceptor">
        <property name="beanIdentifier">
            <ref bean="beanIdentifier"/>
        </property>
        <property name="auditComponent">
            <ref bean="auditComponent"/>
        </property>
        <property name="transactionService">
            <ref bean="transactionService"/>
        </property>
        <property name="threadPoolExecutor">
            <ref bean="auditThreadPool"/>
        </property>
    </bean>


    <!-- Namespace Service -->

    <!-- Transaction Service -->

    <!-- Dictionary Service -->

    <!-- Node Service -->

    <!-- Content Service -->

    <!-- Mime Type Service -->

    <!-- Content Filter Languages Service -->


    <!-- Search Service -->


    <!-- Category Service -->


    <!-- Copy Service -->


    <!-- Lock Service -->


    <!-- Version Service -->


    <!-- COCI Service -->


    <!-- Rule Service -->


    <!-- Importer Service -->


    <!-- Exporter Service -->


    <!-- Action Service -->


    <!-- Permission Service -->


    <!-- Authority Service -->


    <!-- Ownable Service -->

    <!-- Person Service -->

    <!-- Authentication Service -->

    <!-- Template Service -->

    <!-- Script Service -->

    <!-- File/Folder Service -->

    <!-- The CrossRepositoryCopyService -->

    <!-- The AVMLockingAwareService -->

    <!-- The AVMService -->

    <!-- The AVMSyncService -->

    <!-- Attribute Service -->

    <!-- Read transaction advisor for attribute service. -->

    <!-- Write transaction advisor for attribute service. -->

     <!-- Deployment Service. -->

    <!-- AVM Locking Service. -->

    <!-- Workflow Service -->

    <!-- Audit Service -->

    <!-- MultilingualContentService -->

    <!-- EditionService -->

    <!-- ConfigurableService -->

    <!-- RegistryService -->

    <!-- ModuleService -->

    <!-- LinkValidationService -->
    <!-- Read transaction advisor for link validation service. -->

    <!-- Write transaction advisor for link validation service. -->

    <!-- Repository Admin Service -->

    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->
    <!-- CIRCABC Service                                                  -->
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -  -->

	<!-- Global properties used in property expansion throughout the container, overridable via JNDI or System properties -->
    <bean id="global-properties" class="org.alfresco.config.JndiPropertiesFactoryBean">
        <property name="locations">
            <list>
                <value>classpath:alfresco/repository.properties</value>
                <value>classpath:alfresco/domain/transaction.properties</value>
                <!-- <value>classpath:alfresco/jndi.properties</value> -->
                <!--  Overrides supplied by modules -->
                <value>classpath*:alfresco/module/*/alfresco-global.properties</value>
                <!--  Installer or user-provided defaults -->
                <value>classpath*:alfresco-global.properties</value>
            </list>
        </property>
        <property name="systemPropertiesModeName">
            <value>SYSTEM_PROPERTIES_MODE_OVERRIDE</value>
        </property>
        <!-- Extra properties that have no defaults that we allow to be defined through JNDI or System properties -->
        <property name="systemProperties">
            <list>
                <value>hibernate.dialect</value>
                <value>hibernate.query.substitutions</value>
                <value>hibernate.jdbc.use_get_generated_keys</value>
                <value>hibernate.default_schema</value>
            </list>
        </property>
    </bean>


    <!-- Bean in charge of notifying Circabc users -->
    <bean id="notificationService" class="eu.cec.digit.circabc.repo.notification.NotificationServiceImpl">
        <property name="nodeService">
            <ref bean="nodeService" />
		</property>
		<property name="mailService">
            <ref bean="circabcMailService"></ref>
    	</property>
		<property name="dictionaryService">
			<ref bean="dictionaryService" />
		</property>
		<property name="mailPreferencesService">
			<ref bean="mailPreferencesService" />
		</property>
        <property name="managementService">
      		<ref bean="managementService"></ref>
    	</property>
		<property name="logService">
			<ref bean="logService"/>
		</property>  		
		<property name="igRootProfileManagerService">
			<ref bean="igRootProfileManagerService"/>
		</property> 
	</bean>

	<!-- Proxied NotificationService -->
	<bean id="NotificationService"  class="org.springframework.aop.framework.ProxyFactoryBean">
      <property name="proxyInterfaces">
         <value>
		      eu.cec.digit.circabc.service.notification.NotificationService
   		</value>
      </property>
      <property name="target">
            <ref bean="notificationService"/>
      </property>
      <property name="interceptorNames">
         <list>
		    <idref local="NotificationService_transaction"/>
		    <idref bean="AuditMethodInterceptor"/>
		    <idref bean="NotificationService_security"/>
         </list>
      </property>
    </bean>

    <!-- Transaction interceptor for NotificationService  -->
	<bean id="NotificationService_transaction" class="org.springframework.transaction.interceptor.TransactionInterceptor">
         <property name="transactionManager">
            <ref bean="transactionManager"/>
         </property>
         <property name="transactionAttributes">
            <props>
                <prop key="get*">${server.transaction.mode.readOnly}</prop>
                <prop key="*">${server.transaction.mode.default}</prop>
            </props>
        </property>
	</bean>

	<!-- Bean in charge of notification subscription -->
	<bean id="notificationSubscriptionService"
		class="eu.cec.digit.circabc.repo.notification.NotificationSubscriptionServiceImpl">
		<property name="nodeService">
			<ref bean="nodeService" />
		</property>
      	<property name="profileManagerServiceFactory">
      		<ref bean="profileManagerServiceFactory" />
      	</property>
		<property name="personService">
      		<ref bean="personService" />
      	</property>
    	<property name="permissionService">
			<ref bean="permissionService" />
		</property>
    	<property name="managementService">
			<ref bean="managementService" />
    	</property>
    	<property name="userService">
			<ref bean="userService" />
    	</property>
    	<property name="policyBehaviourFilter"> 
            <ref bean="policyBehaviourFilter" /> 
        </property> 
        <property name="multilingualContentService"> 
            <ref bean="multilingualContentService" /> 
        </property>
	</bean>


	<!-- Proxied NotificationService -->
	<bean id="NotificationSubscriptionService"  class="org.springframework.aop.framework.ProxyFactoryBean">
      <property name="proxyInterfaces">
         <value>
		      eu.cec.digit.circabc.service.notification.NotificationSubscriptionService
   		</value>
      </property>
      <property name="target">
            <ref bean="notificationSubscriptionService"/>
      </property>
      <property name="interceptorNames">
         <list>
		    <idref local="NotificationSubscriptionService_transaction"/>
		    <idref bean="AuditMethodInterceptor"/>
		    <idref bean="NotificationSubscriptionService_security"/>
         </list>
      </property>
    </bean>

    <!-- Transaction interceptor for NotificationService  -->
	<bean id="NotificationSubscriptionService_transaction" class="org.springframework.transaction.interceptor.TransactionInterceptor">
         <property name="transactionManager">
            <ref bean="transactionManager"/>
         </property>
         <property name="transactionAttributes">
            <props>
                <prop key="get*">${server.transaction.mode.readOnly}</prop>
                <prop key="*">${server.transaction.mode.default}</prop>
            </props>
        </property>
	</bean>
	
	
	<!-- Bean in charge of enabling or disabling notifying Circabc users on moving and copying nodes -->
    <bean id="notificationManagerService" class="eu.cec.digit.circabc.repo.notification.NotificationManagerServiceImpl">
        <property name="nodeService">
            <ref bean="nodeService" />
		</property>
	</bean>

	<!-- Proxied NotificationService -->
	<bean id="NotificationManagerService"  class="org.springframework.aop.framework.ProxyFactoryBean">
      <property name="proxyInterfaces">
         <value>
		      eu.cec.digit.circabc.service.notification.NotificationManagerService
   		</value>
      </property>
      <property name="target">
            <ref bean="notificationManagerService"/>
      </property>
      <property name="interceptorNames">
         <list>
		    <idref local="NotificationManagerService_transaction"/>
		    <idref bean="AuditMethodInterceptor"/>
		    <idref bean="NotificationManagerService_security"/>
         </list>
      </property>
    </bean>

    <!-- Transaction interceptor for NotificationManagerService  -->
	<bean id="NotificationManagerService_transaction" class="org.springframework.transaction.interceptor.TransactionInterceptor">
         <property name="transactionManager">
            <ref bean="transactionManager"/>
         </property>
         <property name="transactionAttributes">
            <props>
                <prop key="is*">${server.transaction.mode.readOnly}</prop>
                <prop key="*">${server.transaction.mode.default}</prop>
            </props>
        </property>
	</bean>

	<!-- CircabcServiceRegistry -->
	<bean id="circabcServiceRegistry"
		class="eu.cec.digit.circabc.service.CircabcServiceDescriptor" />

	<!-- Bean in charge of managing Circabc users -->
	<bean id="userService"
		class="eu.cec.digit.circabc.repo.user.UserServiceImpl">
		<property name="personService">
			<ref bean="personService" />
		</property>
		<property name="nodeService">
			<ref bean="nodeService" />
		</property>
		<property name="authenticationService">
			<ref bean="authenticationService" />
		</property>
		<property name="permissionService">
			<ref bean="permissionService" />
		</property>
		<property name="authorityService">
			<ref bean="authorityService" />
		</property>
		<property name="managementService">
			<ref bean="managementService" />
		</property>
		<property name="searchService">
			<ref bean="searchService" />
		</property>
		<property name="configurableService">
			<ref bean="configurableService" />
		</property>
        <property name="namespaceService">
            <ref bean="namespaceService" />
        </property>
        <property name="profileManagerServiceFactory">
            <ref bean="profileManagerServiceFactory" />
        </property>
        <property name="ldapUserService">
            <ref bean="luceneUserService" />
        </property>
        <!-- ticketComponent - can be removed when Alfresco will implement authenticationService.getUsersWithTickets -->
		<property name="ticketComponent">
			<ref bean="ticketComponent" />
		</property>
		<property name="ownableService">
			<ref bean="ownableService" />
		</property>
        
	</bean>

	<!-- Proxied UserService -->
	<bean id="UserService"  class="org.springframework.aop.framework.ProxyFactoryBean">
      <property name="proxyInterfaces">
         <value>
		      eu.cec.digit.circabc.service.user.UserService
   		</value>
      </property>
      <property name="target">
            <ref bean="userService"/>
      </property>
      <property name="interceptorNames">
         <list>
		    <idref local="UserService_transaction"/>
		    <idref bean="AuditMethodInterceptor"/>
		    <idref bean="UserService_security"/>
         </list>
      </property>
    </bean>

    <!-- Transaction interceptor for UserService  -->
	<bean id="UserService_transaction" class="org.springframework.transaction.interceptor.TransactionInterceptor">
         <property name="transactionManager">
            <ref bean="transactionManager"/>
         </property>
         <property name="transactionAttributes">
            <props>
                <prop key="get*">${server.transaction.mode.readOnly}</prop>
                <prop key="*">${server.transaction.mode.default}</prop>
            </props>
        </property>
	</bean>


	
	<!-- Bean in charge of managing Circabc users over LDAP -->
	<bean id="luceneUserService"
		class="eu.cec.digit.circabc.repo.user.LuceneUserServiceImpl"  init-method="init">
        <property name="profileManagerServiceFactory">
            <ref bean="profileManagerServiceFactory" />
        </property>
        <property name="nodeService">
            <ref bean="nodeService" />
        </property>
        <property name="searchService">
            <ref bean="searchService" />
        </property>
        <property name="personService">
            <ref bean="personService" />
        </property>
	</bean>

	<!-- Proxied LdapUserService -->
	<bean id="LuceneUserService"  class="org.springframework.aop.framework.ProxyFactoryBean">
      <property name="proxyInterfaces">
         <value>
		      eu.cec.digit.circabc.service.user.LdapUserService
   		</value>
      </property>
      <property name="target">
            <ref bean="luceneUserService"/>
      </property>
      <property name="interceptorNames">
         <list>
		    <idref local="LuceneUserService_transaction"/>
		    <idref bean="AuditMethodInterceptor"/>
		    <idref bean="LdapUserService_security"/>
         </list>
      </property>
    </bean>

    <!-- Transaction interceptor for LdapUserService  -->
	<bean id="LuceneUserService_transaction" class="org.springframework.transaction.interceptor.TransactionInterceptor">
         <property name="transactionManager">
            <ref bean="transactionManager"/>
         </property>
         <property name="transactionAttributes">
            <props>
                <prop key="get*">${server.transaction.mode.readOnly}</prop>
                <prop key="*">${server.transaction.mode.default}</prop>
            </props>
        </property>
	</bean>


	<!-- Bean in charge of managing Circabc keywords -->
	<bean id="keywordsService" class="eu.cec.digit.circabc.repo.keywords.KeywordsServiceImpl">
		<property name="nodeService">
			<ref bean="nodeService" />
		</property>
		<property name="permissionService">
			<ref bean="permissionService" />
		</property>
		<property name="namespaceService">
			<ref bean="namespaceService" />
		</property>
		<property name="searchService">
			<ref bean="searchService" />
		</property>
	</bean>

	<!-- Proxied keywordService -->
	<bean id="KeywordsService"  class="org.springframework.aop.framework.ProxyFactoryBean">
      <property name="proxyInterfaces">
         <value>
		      eu.cec.digit.circabc.service.keyword.KeywordsService
   		</value>
      </property>
      <property name="target">
            <ref bean="keywordsService"/>
      </property>
      <property name="interceptorNames">
         <list>
		    <idref local="KeywordsService_transaction"/>
		    <idref bean="AuditMethodInterceptor"/>
		    <idref bean="KeywordsService_security"/>
         </list>
      </property>
    </bean>

    <!-- Transaction interceptor for KeywordService  -->
	<bean id="KeywordsService_transaction" class="org.springframework.transaction.interceptor.TransactionInterceptor">
         <property name="transactionManager">
            <ref bean="transactionManager"/>
         </property>
         <property name="transactionAttributes">
            <props>
                <prop key="get*">${server.transaction.mode.readOnly}</prop>
                <prop key="*">${server.transaction.mode.default}</prop>
            </props>
        </property>
	</bean>

	<!-- Bean in charge of managing Circabc events -->
	<bean id="eventService" class="eu.cec.digit.circabc.repo.event.EventServiceImpl">
		<property name="nodeService">
			<ref bean="nodeService" />
		</property>
		<property name="permissionService">
			<ref bean="permissionService" />
		</property>
		<property name="namespaceService">
			<ref bean="namespaceService" />
		</property>
		<property name="searchService">
			<ref bean="searchService" />
		</property>
		<property name="userService">
			<ref bean="userService" />
		</property>
		<property name="authorityService">
			<ref bean="authorityService" />
		</property>
		<property name="mailService">
			<ref bean="circabcMailService" />
		</property>
		<property name="mailPreferencesService">
			<ref bean="mailPreferencesService" />
		</property>
		<property name="personService">
			<ref bean="personService" />
		</property>
		<property name="managementService">
			<ref bean="managementService" />
		</property>
		<property name="logService">
			<ref bean="logService"/>
		</property>  		
	</bean>


	<!-- Proxied event Service -->
	<bean id="EventService"  class="org.springframework.aop.framework.ProxyFactoryBean">
      <property name="proxyInterfaces">
         <value>
		      eu.cec.digit.circabc.service.event.EventService
   		</value>
      </property>
      <property name="target">
            <ref bean="eventService"/>
      </property>
      <property name="interceptorNames">
         <list>
		    <idref local="EventService_transaction"/>
		    <idref bean="AuditMethodInterceptor"/>
		    <idref bean="EventService_security"/>
         </list>
      </property>
    </bean>

    <!-- Transaction interceptor for EventService  -->
	<bean id="EventService_transaction" class="org.springframework.transaction.interceptor.TransactionInterceptor">
         <property name="transactionManager">
            <ref bean="transactionManager"/>
         </property>
         <property name="transactionAttributes">
            <props>
                <prop key="get*">${server.transaction.mode.readOnly}</prop>
                <prop key="*">${server.transaction.mode.default}</prop>
            </props>
        </property>
	</bean>

		<!-- Bean in charge of managing Circabc shared spaces -->

	<bean id="shareSpaceService" class="eu.cec.digit.circabc.repo.sharespace.ShareSpaceServiceImpl">
		<property name="nodeService">
			<ref bean="nodeService" />
		</property>
		<property name="permissionService">
			<ref bean="permissionService" />
		</property>
		<property name="managementService">
			<ref bean="managementService" />
		</property>
		<property name="dictionaryService">
			<ref bean="dictionaryService" />
		</property>
		<property name="searchService">
			<ref bean="searchService" />
		</property>
		<property name="namespaceService">
			<ref bean="namespaceService" />
		</property>
	</bean>


	<!-- Proxied shared spaces Service -->
	<bean id="ShareSpaceService"  class="org.springframework.aop.framework.ProxyFactoryBean">
      <property name="proxyInterfaces">
         <value>
		      eu.cec.digit.circabc.service.sharespace.ShareSpaceService
   		</value>
      </property>
      <property name="target">
            <ref bean="shareSpaceService"/>
      </property>
      <property name="interceptorNames">
         <list>
		    <idref local="ShareSpaceService_transaction"/>
		    <idref bean="AuditMethodInterceptor"/>
		    <idref bean="ShareSpaceService_security"/>
         </list>
      </property>
    </bean>

    <!-- Transaction interceptor for shared spaces Service  -->
	<bean id="ShareSpaceService_transaction" class="org.springframework.transaction.interceptor.TransactionInterceptor">
         <property name="transactionManager">
            <ref bean="transactionManager"/>
         </property>
         <property name="transactionAttributes">
            <props>
                <prop key="get*">${server.transaction.mode.readOnly}</prop>
                <prop key="*">${server.transaction.mode.default}</prop>
            </props>
        </property>
	</bean>


	<!-- Load the Logger Action Messages -->
	<bean id="mailwithattach-messages"
		class="org.alfresco.i18n.ResourceBundleBootstrapComponent">
		<property name="resourceBundles">
			<list>
				<value>alfresco.extension.messages.action-config</value>
			</list>
		</property>
	</bean>

	<!-- Load the notification messages -->
	<bean id="notification-messages"
		class="org.alfresco.i18n.ResourceBundleBootstrapComponent">
		<property name="resourceBundles">
			<list>
				<value>alfresco.extension.messages.notification</value>
			</list>
		</property>
	</bean>

	<!-- Load the bulk upload Messages -->
	<bean id="bulk-upload-messages"
		class="org.alfresco.i18n.ResourceBundleBootstrapComponent">
		<property name="resourceBundles">
			<list>
				<value>alfresco.extension.messages.bulk-upload</value>
			</list>
		</property>
	</bean>



	<bean id="profileManagerServiceFactory"
		class="eu.cec.digit.circabc.service.profile.ProfileManagerServiceFactory">
		<property name="nodeService">
			<ref bean="nodeService" />
		</property>
		<property name="secure" value="false" />
	</bean>

	<bean id="ProfileManagerServiceFactory"
		class="eu.cec.digit.circabc.service.profile.ProfileManagerServiceFactory">
		<property name="nodeService">
			<ref bean="NodeService" />
		</property>
		<property name="secure" value="true" />
	</bean>

	<!-- Common beans for XXXProfileManagerService -->
	<bean id="profileManagerServiceAbstract" abstract="true"
		class="eu.cec.digit.circabc.service.profile.ProfileManagerService">
		<property name="profileManagerServiceFactory">
			<ref bean="profileManagerServiceFactory" />
		</property>
		<property name="nodeService">
			<ref bean="nodeService" />
		</property>
		<property name="authorityService">
			<ref bean="authorityService" />
		</property>
		<property name="permissionService">
			<ref bean="permissionService" />
		</property>
		<property name="fileFolderService">
			<ref bean="fileFolderService" />
		</property>
		<property name="ownableService">
			<ref bean="ownableService" />
		</property>
		<property name="serviceRegistry">
			<ref bean="ServiceRegistry" />
		</property>
		<property name="managementService">
			<ref bean="managementService" />
		</property>
		<property name="authenticationService">
			<ref bean="authenticationService" />
		</property>
        <property name="profileMapCache">
			<ref bean="profileMapCache" />
		</property>
		<property name="invitedUsersCache">
			<ref bean="invitedUsersCache" />
		</property>
        <property name="dynamicAuthorithiesCacheManager">
			<ref bean="dynamicAuthorithiesCacheManager" />
		</property>
	</bean>

	<!-- CircabcRootProfileManagerService Service -->
	<bean id="CircabcRootProfileManagerService_transaction"
		class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager">
			<ref bean="transactionManager" />
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="list*">
					${server.transaction.mode.readOnly}
				</prop>
				<prop key="search*">
					${server.transaction.mode.readOnly}
				</prop>
				<prop key="get*">
					${server.transaction.mode.readOnly}
				</prop>
				<prop key="*">${server.transaction.mode.default}</prop>
			</props>
		</property>
	</bean>

	<bean id="circabcRootProfileManagerService"
		class="eu.cec.digit.circabc.repo.profile.root.CircabcRootProfileManagerServiceImpl"
		parent="profileManagerServiceAbstract" />

	<bean id="CircabcRootProfileManagerService"
		class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="proxyInterfaces">
			<value>
				eu.cec.digit.circabc.service.profile.CircabcRootProfileManagerService
			</value>
		</property>
		<property name="target">
			<ref local="circabcRootProfileManagerService" />
		</property>
		<property name="interceptorNames">
			<list>
				<idref local="CircabcRootProfileManagerService_transaction" />
				<idref bean="AuditMethodInterceptor" />
				<!-- idref local="exceptionTranslator"/ -->
				<idref bean="CircabcRootProfileManagerService_security" />
				<!-- idref bean="FileFolderService_descriptor"/ -->
				<!-- idref bean="tempFileMarkerInterceptor"/ -->
			</list>
		</property>
	</bean>

	<!-- CategoryProfileManagerService Service -->
	<bean id="CategoryProfileManagerService_transaction"
		class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager">
			<ref bean="transactionManager" />
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="list*">
					${server.transaction.mode.readOnly}
				</prop>
				<prop key="search*">
					${server.transaction.mode.readOnly}
				</prop>
				<prop key="get*">
					${server.transaction.mode.readOnly}
				</prop>
				<prop key="*">${server.transaction.mode.default}</prop>
			</props>
		</property>
	</bean>

	<bean id="categoryProfileManagerService"
		class="eu.cec.digit.circabc.repo.profile.category.CategoryProfileManagerServiceImpl"
		parent="profileManagerServiceAbstract" />

	<bean id="CategoryProfileManagerService"
		class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="proxyInterfaces">
			<value>
				eu.cec.digit.circabc.service.profile.CategoryProfileManagerService
			</value>
		</property>
		<property name="target">
			<ref local="categoryProfileManagerService" />
		</property>
		<property name="interceptorNames">
			<list>
				<idref
					local="CategoryProfileManagerService_transaction" />
				<idref bean="AuditMethodInterceptor" />
				<!-- idref local="exceptionTranslator"/ -->
				<idref
					bean="CategoryProfileManagerService_security" />
				<!-- idref bean="FileFolderService_descriptor"/ -->
				<!-- idref bean="tempFileMarkerInterceptor"/ -->
			</list>
		</property>
	</bean>

	<!-- IGRootProfileManagerService Service -->
	<bean id="IGRootProfileManagerService_transaction"
		class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager">
			<ref bean="transactionManager" />
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="list*">
					${server.transaction.mode.readOnly}
				</prop>
				<prop key="search*">
					${server.transaction.mode.readOnly}
				</prop>
				<prop key="get*">
					${server.transaction.mode.readOnly}
				</prop>
				<prop key="*">${server.transaction.mode.default}</prop>
			</props>
		</property>
	</bean>

	<bean id="igRootProfileManagerService"
		class="eu.cec.digit.circabc.repo.profile.interestGroup.IGRootProfileManagerServiceImpl"
		parent="profileManagerServiceAbstract" />

	<bean id="IGRootProfileManagerService"
		class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="proxyInterfaces">
			<value>
				eu.cec.digit.circabc.service.profile.IGRootProfileManagerService
			</value>
		</property>
		<property name="target">
			<ref local="igRootProfileManagerService" />
		</property>
		<property name="interceptorNames">
			<list>
				<idref
					local="IGRootProfileManagerService_transaction" />
				<idref bean="AuditMethodInterceptor" />
				<!-- idref local="exceptionTranslator"/ -->
				<idref bean="IGRootProfileManagerService_security" />
				<!-- idref bean="FileFolderService_descriptor"/ -->
				<!-- idref bean="tempFileMarkerInterceptor"/ -->
			</list>
		</property>
	</bean>

	<!-- LibraryProfileManagerService Service -->
	<bean id="LibraryProfileManagerService_transaction"
		class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager">
			<ref bean="transactionManager" />
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="list*">
					${server.transaction.mode.readOnly}
				</prop>
				<prop key="search*">
					${server.transaction.mode.readOnly}
				</prop>
				<prop key="get*">
					${server.transaction.mode.readOnly}
				</prop>
				<prop key="*">${server.transaction.mode.default}</prop>
			</props>
		</property>
	</bean>

	<bean id="libraryProfileManagerService"
		class="eu.cec.digit.circabc.repo.profile.library.LibraryProfileManagerServiceImpl"
		parent="profileManagerServiceAbstract" />

	<bean id="LibraryProfileManagerService"
		class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="proxyInterfaces">
			<value>
				eu.cec.digit.circabc.service.profile.LibraryProfileManagerService
			</value>
		</property>
		<property name="target">
			<ref local="libraryProfileManagerService" />
		</property>
		<property name="interceptorNames">
			<list>
				<idref
					local="LibraryProfileManagerService_transaction" />
				<idref bean="AuditMethodInterceptor" />
				<!-- idref local="exceptionTranslator"/ -->
				<idref
					bean="LibraryProfileManagerService_security" />
				<!-- idref bean="FileFolderService_descriptor"/ -->
				<!-- idref bean="tempFileMarkerInterceptor"/ -->
			</list>
		</property>
	</bean>

	<!-- NewsGroupProfileManagerService Service -->
	<bean id="NewsGroupProfileManagerService_transaction"
		class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager">
			<ref bean="transactionManager" />
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="list*">
					${server.transaction.mode.readOnly}
				</prop>
				<prop key="search*">
					${server.transaction.mode.readOnly}
				</prop>
				<prop key="get*">
					${server.transaction.mode.readOnly}
				</prop>
				<prop key="*">${server.transaction.mode.default}</prop>
			</props>
		</property>
	</bean>

	<bean id="newsGroupProfileManagerService"
		class="eu.cec.digit.circabc.repo.profile.newsgroup.NewsGroupProfileManagerServiceImpl"
		parent="profileManagerServiceAbstract" />

	<bean id="NewsGroupProfileManagerService"
		class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="proxyInterfaces">
			<value>
				eu.cec.digit.circabc.service.profile.NewsGroupProfileManagerService
			</value>
		</property>
		<property name="target">
			<ref local="newsGroupProfileManagerService" />
		</property>
		<property name="interceptorNames">
			<list>
				<idref
					local="NewsGroupProfileManagerService_transaction" />
				<idref bean="AuditMethodInterceptor" />
				<!-- idref local="exceptionTranslator"/ -->
				<idref
					bean="NewsGroupProfileManagerService_security" />
				<!-- idref bean="FileFolderService_descriptor"/ -->
				<!-- idref bean="tempFileMarkerInterceptor"/ -->
			</list>
		</property>
	</bean>

	<!-- SurveyProfileManagerService Service -->
	<bean id="SurveyProfileManagerService_transaction"
		class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager">
			<ref bean="transactionManager" />
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="list*">
					${server.transaction.mode.readOnly}
				</prop>
				<prop key="search*">
					${server.transaction.mode.readOnly}
				</prop>
				<prop key="get*">
					${server.transaction.mode.readOnly}
				</prop>
				<prop key="*">${server.transaction.mode.default}</prop>
			</props>
		</property>
	</bean>

	<bean id="surveyProfileManagerService"
		class="eu.cec.digit.circabc.repo.profile.survey.SurveyProfileManagerServiceImpl"
		parent="profileManagerServiceAbstract" />

	<bean id="SurveyProfileManagerService"
		class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="proxyInterfaces">
			<value>
				eu.cec.digit.circabc.service.profile.SurveyProfileManagerService
			</value>
		</property>
		<property name="target">
			<ref local="surveyProfileManagerService" />
		</property>
		<property name="interceptorNames">
			<list>
				<idref
					local="SurveyProfileManagerService_transaction" />
				<idref bean="AuditMethodInterceptor" />
				<!-- idref local="exceptionTranslator"/ -->
				<idref
					bean="SurveyProfileManagerService_security" />
				<!-- idref bean="FileFolderService_descriptor"/ -->
				<!-- idref bean="tempFileMarkerInterceptor"/ -->
			</list>
		</property>
	</bean>

	<!-- InformationProfileManagerService Service -->
	<bean id="InformationProfileManagerService_transaction"
		class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager">
			<ref bean="transactionManager" />
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="list*">
					${server.transaction.mode.readOnly}
				</prop>
				<prop key="search*">
					${server.transaction.mode.readOnly}
				</prop>
				<prop key="get*">
					${server.transaction.mode.readOnly}
				</prop>
				<prop key="*">${server.transaction.mode.default}</prop>
			</props>
		</property>
	</bean>

	<bean id="informationProfileManagerService"
		class="eu.cec.digit.circabc.repo.profile.inf.InformationProfileManagerServiceImpl"
		parent="profileManagerServiceAbstract" />

	<bean id="InformationProfileManagerService"
		class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="proxyInterfaces">
			<value>
				eu.cec.digit.circabc.service.profile.InformationProfileManagerService
			</value>
		</property>
		<property name="target">
			<ref local="informationProfileManagerService" />
		</property>
		<property name="interceptorNames">
			<list>
				<idref
					local="InformationProfileManagerService_transaction" />
				<idref bean="AuditMethodInterceptor" />
				<!-- idref local="exceptionTranslator"/ -->
				<idref
					bean="InformationProfileManagerService_security" />
				<!-- idref bean="FileFolderService_descriptor"/ -->
				<!-- idref bean="tempFileMarkerInterceptor"/ -->
			</list>
		</property>
	</bean>

	<!-- EventProfileManagerService Service -->
	<bean id="EventProfileManagerService_transaction"
		class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager">
			<ref bean="transactionManager" />
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="list*">
					${server.transaction.mode.readOnly}
				</prop>
				<prop key="search*">
					${server.transaction.mode.readOnly}
				</prop>
				<prop key="get*">
					${server.transaction.mode.readOnly}
				</prop>
				<prop key="*">${server.transaction.mode.default}</prop>
			</props>
		</property>
	</bean>

	<bean id="eventProfileManagerService"
		class="eu.cec.digit.circabc.repo.profile.event.EventProfileManagerServiceImpl"
		parent="profileManagerServiceAbstract" />

	<bean id="EventProfileManagerService"
		class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="proxyInterfaces">
			<value>
				eu.cec.digit.circabc.service.profile.EventProfileManagerService
			</value>
		</property>
		<property name="target">
			<ref local="eventProfileManagerService" />
		</property>
		<property name="interceptorNames">
			<list>
				<idref
					local="EventProfileManagerService_transaction" />
				<idref bean="AuditMethodInterceptor" />
				<!-- idref local="exceptionTranslator"/ -->
				<idref
					bean="EventProfileManagerService_security" />
				<!-- idref bean="FileFolderService_descriptor"/ -->
				<!-- idref bean="tempFileMarkerInterceptor"/ -->
			</list>
		</property>
	</bean>

	<!-- ManagementService Service -->
	<bean id="ManagementService_transaction"
		class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager">
			<ref bean="transactionManager" />
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="create*">
					${server.transaction.mode.readOnly}
				</prop>
				<prop key="search*">
					${server.transaction.mode.readOnly}
				</prop>
				<prop key="get*">
					${server.transaction.mode.readOnly}
				</prop>
				<prop key="*">${server.transaction.mode.default}</prop>
			</props>
		</property>
	</bean>

	<bean id="managementService"
		class="eu.cec.digit.circabc.repo.struct.ManagementServiceImpl" init-method="init">

		<property name="searchService">
			<ref bean="searchService" />
		</property>
		<property name="actionService">
			<ref bean="actionService" />
		</property>
		<property name="ruleService">
			<ref bean="ruleService" />
		</property>
		<property name="permissionService">
			<ref bean="permissionService" />
		</property>
		<property name="fileFolderService">
			<ref bean="fileFolderService" />
		</property>
		<property name="nodeService">
			<ref bean="nodeService" />
		</property>
		<property name="ownableService">
			<ref bean="ownableService" />
		</property>
		<property name="authorityService">
			<ref bean="authorityService" />
		</property>
		<property name="authenticationService">
			<ref bean="authenticationService" />
		</property>
		<property name="profileManagerServiceFactory">
			<ref bean="profileManagerServiceFactory"></ref>
		</property>
		<property name="contentService">
            <ref bean="contentService" />
        </property>
		<property name="dictionaryService">
			<ref bean="dictionaryService"></ref>
		</property>
		<property name="multilingualContentService">
            <ref bean="multilingualContentService" />
        </property>
        <property name="tenantService">
            <ref bean="tenantService" />
        </property>
		<property name="nodePreferencesService">
			<ref bean="nodePreferencesService" />
		</property>
		<property name="categoryService">
			<ref bean="categoryService" />
		</property>
		<property name="serviceRegistry">
			<ref bean="ServiceRegistry" />
		</property>
	</bean>

	<bean id="ManagementService"
		class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="proxyInterfaces">
			<value>
				eu.cec.digit.circabc.service.struct.ManagementService
			</value>
		</property>
		<property name="target">
			<ref local="managementService" />
		</property>
		<property name="interceptorNames">
			<list>
				<idref local="ManagementService_transaction" />
				<idref bean="AuditMethodInterceptor" />
				<!-- idref local="exceptionTranslator"/ -->
				<idref bean="ManagementService_security" />
				<!-- idref bean="FileFolderService_descriptor"/ -->
				<!-- idref bean="tempFileMarkerInterceptor"/ -->
			</list>
		</property>
	</bean>

	<!-- MailService Service -->
	<bean id="CircabcMailService_transaction"
		class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager">
			<ref bean="transactionManager" />
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="*">
					${server.transaction.mode.readOnly}
				</prop>
			</props>
		</property>
	</bean>

	<bean id="circabcMailService"
		class="eu.cec.digit.circabc.repo.mail.MailServiceImpl" init-method="init">

      <property name="fileFolderService">
         <ref bean="fileFolderService" />
      </property>
      <property name="mailSender">
      	 <ref bean="mailService"></ref>
      </property>
      <property name="managementService">
      	 <ref bean="managementService"></ref>
      </property>
      <property name="mailPreferencesService">
      	 <ref bean="mailPreferencesService"></ref>
      </property>
	  <property name="contentService">
      	 <ref bean="contentService"></ref>
      </property>
      <property name="noReply">
      		<value>${mail.from.default}</value>
      </property>
      <property name="support">
      		<value>${mail.from.circabc.support}</value>
      </property>
      <property name="devTeam">
      		<value>${mail.from.circabc.devteam}</value>
      </property>
      <property name="helpdeskAddress">
      		<value>${mail.from.circabc.helpdesk}</value>
      </property>
      <property name="disclamerHtml">
      		<value>${mail.disclamer.html}</value>
      </property>
      <property name="disclamerText">
      		<value>${mail.disclamer.text}</value>
      </property>
      <property name="logoCid">
      		<value>${mail.disclamer.logo.cid}</value>
      </property>
	</bean>

	<bean id="CircabcMailService"
		class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="proxyInterfaces">
			<value>
				eu.cec.digit.circabc.service.mail.MailService
			</value>
		</property>
		<property name="target">
			<ref local="circabcMailService" />
		</property>
		<property name="interceptorNames">
			<list>
				<idref local="CircabcMailService_transaction" />
				<idref bean="AuditMethodInterceptor" />
				<!-- idref local="exceptionTranslator"/ -->
				<idref bean="CircabcMailService_security" />
				<!-- idref bean="FileFolderService_descriptor"/ -->
				<!-- idref bean="tempFileMarkerInterceptor"/ -->
			</list>
		</property>
	</bean>


	<!-- MailToMembersService Service -->
	<bean id="MailToMembersService_transaction"
		class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager">
			<ref bean="transactionManager" />
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="*">
					${server.transaction.mode.readOnly}
				</prop>
			</props>
		</property>
	</bean>

	<bean id="mailToMembersService"
		class="eu.cec.digit.circabc.repo.mail.MailToMembersServiceImpl">
      <property name="mailService">
      		<ref bean="circabcMailService"></ref>
      </property>
      <property name="profileManagerServiceFactory">
      		<ref bean="profileManagerServiceFactory"></ref>
      </property>
	</bean>

	<bean id="MailToMembersService"
		class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="proxyInterfaces">
			<value>
				eu.cec.digit.circabc.service.mail.MailToMembersService
			</value>
		</property>
		<property name="target">
			<ref local="mailToMembersService" />
		</property>
		<property name="interceptorNames">
			<list>
				<idref local="MailToMembersService_transaction" />
				<idref bean="AuditMethodInterceptor" />
				<!-- idref local="exceptionTranslator"/ -->
				<idref bean="MailToMembersService_security" />
				<!-- idref bean="FileFolderService_descriptor"/ -->
				<!-- idref bean="tempFileMarkerInterceptor"/ -->
			</list>
		</property>
	</bean>

	<!-- BulkService Service -->
	<bean id="BulkService_transaction"
		class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager">
			<ref bean="transactionManager" />
		</property>
		<property name="transactionAttributes">
            <props>
                <prop key="get*">${server.transaction.mode.readOnly}</prop>
                <prop key="*">${server.transaction.mode.default}</prop>
            </props>
		</property>
	</bean>

	<bean id="bulkService"
		class="eu.cec.digit.circabc.service.bulk.BulkServiceImpl">
		<property name="fileFolderService">
			<ref bean="fileFolderService" />
		</property>
		<property name="nodeService">
			<ref bean="nodeService" />
		</property>
		<property name="contentService">
			<ref bean="contentService" />
		</property>
		<property name="zipService">
			<ref bean="zipService" />
		</property>
		<property name="indexService">
			<ref bean="indexService" />
		</property>
		<property name="contentFilterLanguagesService">
			<ref bean="contentFilterLanguagesService" />
		</property>
		<property name="managementService">
			<ref bean="managementService" />
		</property>
		<property name="keywordsService">
			<ref bean="keywordsService" />
		</property>
		<property name="multilingualContentService">
			<ref bean="multilingualContentService" />
		</property>
		<property name="dictionaryService">
			<ref bean="dictionaryService" />
		</property>
		<property name="permissionService">
			<ref bean="permissionService" />
		</property>
	</bean>

	<bean id="BulkService"
		class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="proxyInterfaces">
			<value>
				eu.cec.digit.circabc.service.bulk.BulkService
			</value>
		</property>
		<property name="target">
			<ref local="bulkService" />
		</property>
		<property name="interceptorNames">
			<list>
				<idref local="BulkService_transaction" />
				<idref bean="AuditMethodInterceptor" />
				<!-- idref local="exceptionTranslator"/ -->
				<idref bean="BulkService_security" />
				<!-- idref bean="FileFolderService_descriptor"/ -->
				<!-- idref bean="tempFileMarkerInterceptor"/ -->
			</list>
		</property>
	</bean>

	<!-- IndexService Service -->
	<bean id="IndexService_transaction"
		class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager">
			<ref bean="transactionManager" />
		</property>
		<property name="transactionAttributes">
            <props>
                <prop key="get*">${server.transaction.mode.readOnly}</prop>
                <prop key="*">${server.transaction.mode.default}</prop>
            </props>
		</property>
	</bean>

	<bean id="indexService" class="eu.cec.digit.circabc.service.bulk.indexes.IndexServiceImpl">
		<property name="serviceRegistry">
			<ref bean="ServiceRegistry"/>
		</property>
	</bean>

	<bean id="IndexService"
		class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="proxyInterfaces">
			<value>
				eu.cec.digit.circabc.service.bulk.indexes.IndexService
			</value>
		</property>
		<property name="target">
			<ref local="indexService" />
		</property>
		<property name="interceptorNames">
			<list>
				<idref local="IndexService_transaction" />
				<idref bean="AuditMethodInterceptor" />
				<!-- idref local="exceptionTranslator"/ -->
				<idref bean="IndexService_security" />
				<!-- idref bean="FileFolderService_descriptor"/ -->
				<!-- idref bean="tempFileMarkerInterceptor"/ -->
			</list>
		</property>
	</bean>

	<!-- ZipService Service -->
	<bean id="ZipService_transaction"
		class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager">
			<ref bean="transactionManager" />
		</property>
		<property name="transactionAttributes">
            <props>
                <prop key="get*">${server.transaction.mode.readOnly}</prop>
                <prop key="*">${server.transaction.mode.default}</prop>
            </props>
		</property>
	</bean>

	<bean id="zipService" class="eu.cec.digit.circabc.service.compress.ZipServiceImpl">
		<property name="nodeService">
			<ref bean="nodeService" />
		</property>
		<property name="contentService">
			<ref bean="contentService" />
		</property>
		<property name="mimetypeService">
			<ref bean="mimetypeService" />
		</property>
		<property name="namespaceService">
			<ref bean="namespaceService" />
		</property>
		<property name="fileFolderService">
			<ref bean="fileFolderService" />
		</property>
		<property name="permissionService">
			<ref bean="permissionService" />
		</property>
		<property name="dictionaryService">
			<ref bean="dictionaryService" />
		</property>
		<property name="managementService">
			<ref bean="managementService" />
		</property>
	</bean>

	<bean id="ZipService"
		class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="proxyInterfaces">
			<value>
				eu.cec.digit.circabc.service.compress.ZipService
			</value>
		</property>
		<property name="target">
			<ref local="zipService" />
		</property>
		<property name="interceptorNames">
			<list>
				<idref local="ZipService_transaction" />
				<idref bean="AuditMethodInterceptor" />
				<!-- idref local="exceptionTranslator"/ -->
				<idref bean="ZipService_security" />
				<!-- idref bean="FileFolderService_descriptor"/ -->
				<!-- idref bean="tempFileMarkerInterceptor"/ -->
			</list>
		</property>
	</bean>

		<!-- Bean in charge of dynamic properties -->
    <bean id="dynamicPropertiesService" class="eu.cec.digit.circabc.repo.dynamic.property.DynamicPropertyServiceImpl">
		<property name="nodeService">
			<ref bean="nodeService" />
		</property>
		<property name="permissionService">
			<ref bean="permissionService" />
		</property>
		<property name="namespaceService">
			<ref bean="namespaceService" />
		</property>
		<property name="searchService">
			<ref bean="searchService" />
		</property>
		<property name="dynamicPropertyCache">
            <ref bean="dynamicPropertyCache" />
        </property>
	</bean>

	<!-- Proxied DynamicPropertiesService -->
	<bean id="DynamicPropertiesService"  class="org.springframework.aop.framework.ProxyFactoryBean">
      <property name="proxyInterfaces">
         <value>
		      eu.cec.digit.circabc.service.dynamic.property.DynamicPropertyService
   		</value>
      </property>
      <property name="target">
            <ref bean="dynamicPropertiesService"/>
      </property>
      <property name="interceptorNames">
         <list>
		    <idref local="DynamicPropertiesService_transaction"/>
		    <idref bean="AuditMethodInterceptor"/>
		    <idref bean="DynamicPropertiesService_security"/>
         </list>
      </property>
    </bean>

    <!-- Transaction interceptor for DynamicPropertiesService  -->
	<bean id="DynamicPropertiesService_transaction" class="org.springframework.transaction.interceptor.TransactionInterceptor">
         <property name="transactionManager">
            <ref bean="transactionManager"/>
         </property>
         <property name="transactionAttributes">
            <props>
                <prop key="get*">${server.transaction.mode.readOnly}</prop>
                <prop key="*">${server.transaction.mode.default}</prop>
            </props>
        </property>
	</bean>


 	<!-- Bean in charge of server configration reporter -->
    <bean id="serverConfigurationService" class="eu.cec.digit.circabc.repo.admin.debug.ServerConfigurationServiceImpl">
		<property name="nodeService">
			<ref bean="nodeService" />
		</property>
		<property name="scheduler">
			<ref bean="schedulerFactory" />
		</property>
	</bean>

	<!-- Proxied ServerConfigurationService -->
	<bean id="ServerConfigurationService" class="org.springframework.aop.framework.ProxyFactoryBean">
      <property name="proxyInterfaces">
         <value>
		      eu.cec.digit.circabc.service.admin.debug.ServerConfigurationService
   		</value>
      </property>
      <property name="target">
            <ref bean="serverConfigurationService"/>
      </property>
      <property name="interceptorNames">
         <list>
		    <idref local="ServerConfigurationService_transaction"/>
		    <!--  No audit and no security needed here -->
         </list>
      </property>
    </bean>

    <!-- Transaction interceptor for NotificationService  -->
	<bean id="ServerConfigurationService_transaction" class="org.springframework.transaction.interceptor.TransactionInterceptor">
         <property name="transactionManager">
            <ref bean="transactionManager"/>
         </property>
         <property name="transactionAttributes">
            <props>
                <prop key="get*">${server.transaction.mode.readOnly}</prop>
                <prop key="*">${server.transaction.mode.default}</prop>
            </props>
        </property>
	</bean>


  <bean id="rootPreferencesUpdater" class="eu.cec.digit.circabc.repo.customisation.RootPreferencesUpdater" >
      <property name="configService">
         <ref bean="rootPreferenceConfigService" />
      </property>
      <property name="nodeService">
         <ref bean="nodeService" />
      </property>
      <property name="contentService">
         <ref bean="contentService" />
      </property>
      <property name="mimetypeService">
         <ref bean="mimetypeService" />
      </property>
      <property name="fileFolderService">
         <ref bean="fileFolderService" />
      </property>
      <property name="permissionService">
         <ref bean="permissionService" />
      </property>
      <property name="configCondition">
        <value>Circabc Root Customization</value>
      </property>
    </bean>

  	<!-- Bean in charge of the customisation of the presentation of any node -->
    <bean id="nodePreferencesService" class="eu.cec.digit.circabc.repo.customisation.NodePreferencesServiceImpl" >
		<property name="nodeService">
			<ref bean="nodeService" />
		</property>
		<property name="managementService">
			<ref bean="managementService" />
		</property>
		<property name="contentService">
			<ref bean="contentService" />
		</property>
		<property name="containerCache">
            <ref bean="customization.containerCache" />
        </property>
		<property name="customizationFolderCache">
            <ref bean="customization.foldersCache" />
        </property>
 		<property name="rootPreferencesUpdater">
            <ref bean="rootPreferencesUpdater" />
        </property>
		<property name="multilingualContentService">
            <ref bean="multilingualContentService" />
        </property>
		<property name="mimetypeService">
            <ref bean="mimetypeService" />
        </property>
	</bean>

	<!-- Proxied NodePreferencesService -->
	<bean id="NodePreferencesService"  class="org.springframework.aop.framework.ProxyFactoryBean">
      <property name="proxyInterfaces">
         <value>
		      eu.cec.digit.circabc.service.customisation.NodePreferencesService
   		</value>
      </property>
      <property name="target">
            <ref bean="nodePreferencesService"/>
      </property>
      <property name="interceptorNames">
         <list>
		    <idref local="NodePreferencesService_transaction"/>
		    <idref bean="AuditMethodInterceptor"/>
		    <idref bean="NodePreferencesService_security"/>
         </list>
      </property>
    </bean>

    <!-- Transaction interceptor for Node Preferences Service  -->
	<bean id="NodePreferencesService_transaction" class="org.springframework.transaction.interceptor.TransactionInterceptor">
         <property name="transactionManager">
            <ref bean="transactionManager"/>
         </property>
         <property name="transactionAttributes">
            <props>
                <prop key="get*">${server.transaction.mode.readOnly}</prop>
                <prop key="build*">${server.transaction.mode.readOnly}</prop>
                <prop key="*">${server.transaction.mode.default}</prop>
            </props>
        </property>
	</bean>

	<!-- Bean in charge of the customisation of the presentation of any mail  -->
    <bean id="mailPreferencesService" class="eu.cec.digit.circabc.repo.customisation.mail.MailPreferencesServiceImpl">
		<property name="nodePreferencesService">
			<ref bean="nodePreferencesService" />
		</property>
		<property name="nodeService">
			<ref bean="nodeService" />
		</property>
		<property name="templateService">
			<ref bean="templateService" />
		</property>
		<property name="personService">
			<ref bean="personService" />
		</property>
		<property name="dictionaryService">
			<ref bean="dictionaryService" />
		</property>
		<property name="managementService">
			<ref bean="managementService" />
		</property>
		<property name="multilingualContentService">
            <ref bean="multilingualContentService" />
        </property>
	</bean>

	<!-- Proxied MailPreferencesService -->
	<bean id="MailPreferencesService"  class="org.springframework.aop.framework.ProxyFactoryBean">
      <property name="proxyInterfaces">
         <value>
		      eu.cec.digit.circabc.service.customisation.mail.MailPreferencesService
   		</value>
      </property>
      <property name="target">
            <ref bean="mailPreferencesService"/>
      </property>
      <property name="interceptorNames">
         <list>
		    <idref local="MailPreferencesService_transaction"/>
		    <idref bean="AuditMethodInterceptor"/>
		    <idref bean="MailPreferencesService_security"/>
         </list>
      </property>
    </bean>

    <!-- Transaction interceptor for Mail Preferences Service  -->
	<bean id="MailPreferencesService_transaction" class="org.springframework.transaction.interceptor.TransactionInterceptor">
         <property name="transactionManager">
            <ref bean="transactionManager"/>
         </property>
         <property name="transactionAttributes">
            <props>
                <prop key="get*">${server.transaction.mode.readOnly}</prop>
                <prop key="build*">${server.transaction.mode.readOnly}</prop>
                <prop key="*">${server.transaction.mode.default}</prop>
            </props>
        </property>
	</bean>

	<!-- Bean in charge of the customisation of the presentation of any Navigation  -->
    <bean id="navigationPreferencesService" class="eu.cec.digit.circabc.repo.customisation.nav.NavigationPreferencesServiceImpl">
		<property name="nodeService">
			<ref bean="nodeService" />
		</property>
		<property name="nodePreferencesService">
			<ref bean="nodePreferencesService" />
		</property>
		<property name="navigationConfigService">
            <ref bean="navigationConfigService" />
        </property>
		<property name="navPreferenceCache">
            <ref bean="customization.navigation.preferenceCache" />
        </property>
	</bean>

	<!-- Proxied NavigationPreferencesService -->
	<bean id="NavigationPreferencesService"  class="org.springframework.aop.framework.ProxyFactoryBean">
      <property name="proxyInterfaces">
         <value>
		      eu.cec.digit.circabc.service.customisation.nav.NavigationPreferencesService
   		</value>
      </property>
      <property name="target">
            <ref bean="navigationPreferencesService"/>
      </property>
      <property name="interceptorNames">
         <list>
		    <idref local="NavigationPreferencesService_transaction"/>
		    <idref bean="AuditMethodInterceptor"/>
		    <idref bean="NavigationPreferencesService_security"/>
         </list>
      </property>
    </bean>

    <!-- Transaction interceptor for Navigation Preferences Service  -->
	<bean id="NavigationPreferencesService_transaction" class="org.springframework.transaction.interceptor.TransactionInterceptor">
         <property name="transactionManager">
            <ref bean="transactionManager"/>
         </property>
         <property name="transactionAttributes">
            <props>
                <prop key="get*">${server.transaction.mode.readOnly}</prop>
                <prop key="build*">${server.transaction.mode.readOnly}</prop>
                <prop key="*">${server.transaction.mode.default}</prop>
            </props>
        </property>
	</bean>

	<!-- Bean in charge of the customisation of the ig logo  -->
    <bean id="logoPreferencesService" class="eu.cec.digit.circabc.repo.customisation.logo.LogoPreferencesServiceImpl">
		<property name="nodeService">
			<ref bean="nodeService" />
		</property>
		<property name="nodePreferencesService">
			<ref bean="nodePreferencesService" />
		</property>
		<property name="contentService">
			<ref bean="contentService" />
		</property>
		<property name="logoCache">
            <ref bean="customization.logo.imagesCache" />
        </property>
		<property name="configCache">
            <ref bean="customization.logo.configCache" />
        </property>
	</bean>

	<!-- Proxied LogoPreferencesService -->
	<bean id="LogoPreferencesService"  class="org.springframework.aop.framework.ProxyFactoryBean">
      <property name="proxyInterfaces">
         <value>
		      eu.cec.digit.circabc.service.customisation.logo.LogoPreferencesService
   		</value>
      </property>
      <property name="target">
            <ref bean="logoPreferencesService"/>
      </property>
      <property name="interceptorNames">
         <list>
		    <idref local="LogoPreferencesService_transaction"/>
		    <idref bean="AuditMethodInterceptor"/>
		    <idref bean="LogoPreferencesService_security"/>
         </list>
      </property>
    </bean>

    <!-- Transaction interceptor for Logo Preferences Service  -->
	<bean id="LogoPreferencesService_transaction" class="org.springframework.transaction.interceptor.TransactionInterceptor">
         <property name="transactionManager">
            <ref bean="transactionManager"/>
         </property>
         <property name="transactionAttributes">
            <props>
                <prop key="get*">${server.transaction.mode.readOnly}</prop>
                <prop key="*">${server.transaction.mode.default}</prop>
            </props>
        </property>
	</bean>

	<!-- Bean in charge of logging service -->
    <bean id="logService" class="eu.cec.digit.circabc.repo.log.DBLogServiceImpl">
    	<property name="logDaoService" ref="logDaoService"/>
	</bean>

	<!-- Bean in charge of locking service -->

    <bean id="circabcLockService" class="eu.cec.digit.circabc.repo.lock.DBLockServiceImpl">
    	<property name="lockDaoService" ref="lockDaoService"/>
	</bean>

	<!-- Bean in charge of managing moderated nodes -->
	<bean id="moderationService" class="eu.cec.digit.circabc.repo.newsgroup.ModerationServiceImpl">
		<property name="nodeService">
			<ref bean="nodeService" />
		</property>
		<property name="permissionService">
			<ref bean="permissionService" />
		</property>
		<property name="dictionaryService">
			<ref bean="dictionaryService" />
		</property>
		<property name="contentService">
			<ref bean="contentService" />
		</property>
		<property name="policyBehaviourFilter">
			<ref bean="policyBehaviourFilter" />
		</property>
	</bean>

	<!-- Proxied moderationService -->
	<bean id="ModerationService"  class="org.springframework.aop.framework.ProxyFactoryBean">
      <property name="proxyInterfaces">
         <value>
		      eu.cec.digit.circabc.service.newsgroup.ModerationService
   		</value>
      </property>
      <property name="target">
            <ref bean="moderationService"/>
      </property>
      <property name="interceptorNames">
         <list>
		    <idref local="ModerationService_transaction"/>
		    <idref bean="AuditMethodInterceptor"/>
		    <idref bean="ModerationService_security"/>
         </list>
      </property>
    </bean>

    <!-- Transaction interceptor for ModerationService  -->
	<bean id="ModerationService_transaction" class="org.springframework.transaction.interceptor.TransactionInterceptor">
         <property name="transactionManager">
            <ref bean="transactionManager"/>
         </property>
         <property name="transactionAttributes">
            <props>
                <prop key="get*">${server.transaction.mode.readOnly}</prop>
                <prop key="is*">${server.transaction.mode.readOnly}</prop>
                <prop key="*">${server.transaction.mode.default}</prop>
            </props>
        </property>
	</bean>

	<!-- Bean in charge of support users -->
	<bean id="supportService" class="eu.cec.digit.circabc.repo.support.SupportServiceImpl">
		<property name="authorityService">
			<ref bean="authorityService" />
		</property>
		<property name="supportGroupName">
        	<value>CIRCABC_SUPPORT</value>
        </property>
	</bean>

	<!-- Proxied supportService -->
	<bean id="SupportService"  class="org.springframework.aop.framework.ProxyFactoryBean">
      <property name="proxyInterfaces">
         <value>
		      eu.cec.digit.circabc.service.support.SupportService
   		</value>
      </property>
      <property name="target">
            <ref bean="supportService"/>
      </property>
      <property name="interceptorNames">
         <list>
		    <idref local="SupportService_transaction"/>
		    <idref bean="AuditMethodInterceptor"/>
		    <idref bean="SupportService_security"/>
         </list>
      </property>
    </bean>

    <!-- Transaction interceptor for ModerationService  -->
	<bean id="SupportService_transaction" class="org.springframework.transaction.interceptor.TransactionInterceptor">
         <property name="transactionManager">
            <ref bean="transactionManager"/>
         </property>
         <property name="transactionAttributes">
            <props>
                <prop key="get*">${server.transaction.mode.readOnly}</prop>
                <prop key="is*">${server.transaction.mode.readOnly}</prop>
                <prop key="*">${server.transaction.mode.default}</prop>
            </props>
        </property>
	</bean>

	<!-- Bean in charge of managing attachement -->
	<bean id="attachementService" class="eu.cec.digit.circabc.repo.newsgroup.AttachementServiceImpl">
		<property name="nodeService">
			<ref bean="nodeService" />
		</property>
		<property name="contentService">
			<ref bean="contentService" />
		</property>
	</bean>

	<!-- Proxied attachementService -->
	<bean id="AttachementService"  class="org.springframework.aop.framework.ProxyFactoryBean">
      <property name="proxyInterfaces">
         <value>
		      eu.cec.digit.circabc.service.newsgroup.AttachementService
   		</value>
      </property>
      <property name="target">
            <ref bean="attachementService"/>
      </property>
      <property name="interceptorNames">
         <list>
		    <idref local="AttachementService_transaction"/>
		    <idref bean="AuditMethodInterceptor"/>
		    <idref bean="AttachementService_security"/>
         </list>
      </property>
    </bean>

    <!-- Transaction interceptor for AttachementService  -->
	<bean id="AttachementService_transaction" class="org.springframework.transaction.interceptor.TransactionInterceptor">
         <property name="transactionManager">
            <ref bean="transactionManager"/>
         </property>
         <property name="transactionAttributes">
            <props>
                <prop key="get*">${server.transaction.mode.readOnly}</prop>
                <prop key="is*">${server.transaction.mode.readOnly}</prop>
                <prop key="*">${server.transaction.mode.default}</prop>
            </props>
        </property>
	</bean>
	
	<!-- Bean in charge of statistics in one IG -->
    <bean id="igStatisticsService" class="eu.cec.digit.circabc.repo.statistics.ig.IgStatisticsServiceImpl">
    	<property name="nodeService">
			<ref bean="nodeService" />
		</property>
		<property name="searchService">
			<ref bean="searchService" />
		</property>
		<property name="namespaceService">
			<ref bean="namespaceService" />
		</property>
		<property name="fileFolderService">
			<ref bean="fileFolderService" />
		</property>
		<property name="logService">
			<ref bean="logService"/>
		</property>
	</bean>
	
	<!-- Proxied statistics service -->
	<bean id="IgStatisticsService"  class="org.springframework.aop.framework.ProxyFactoryBean">
      <property name="proxyInterfaces">
         <value>
		      eu.cec.digit.circabc.service.statistics.ig.IgStatisticsService
   		</value>
      </property>
      <property name="target">
            <ref bean="igStatisticsService"/>
      </property>
      <property name="interceptorNames">
         <list>
		    <idref local="IgStatisticsService_transaction"/>
		    <idref bean="AuditMethodInterceptor"/>
		    <idref bean="IgStatisticsService_security"/>
         </list>
      </property>
    </bean>
    
    <!-- Transaction interceptor for NotificationService  -->
	<bean id="IgStatisticsService_transaction" class="org.springframework.transaction.interceptor.TransactionInterceptor">
         <property name="transactionManager">
            <ref bean="transactionManager"/>
         </property>
         <property name="transactionAttributes">
            <props>
                <prop key="get*">${server.transaction.mode.readOnly}</prop>
                <prop key="*">${server.transaction.mode.default}</prop>
            </props>
        </property>
	</bean>
	
		<!-- Bean in charge of global statistics in Circabc -->
    <bean id="globalStatisticsService" class="eu.cec.digit.circabc.repo.statistics.global.GlobalStatisticsServiceImpl">
    	<property name="managementService">
			<ref bean="managementService"/>
		</property>
		<property name="nodeService">
			<ref bean="nodeService"/>
		</property>
		<property name="searchService">
			<ref bean="searchService"/>
		</property>
		<property name="fileFolderService">
			<ref bean="fileFolderService"/>
		</property>
		<property name="personService">
			<ref bean="personService"/>
		</property>
		<property name="reportDaoService">
			<ref bean="reportDaoService"/>
		</property>
		<property name="transactionService">
			<ref bean="transactionService"/>
		</property>
		<property name="contentService">
			<ref bean="contentService"/>
		</property>
		<property name="igRootProfileManagerService">
			<ref bean="igRootProfileManagerService"/>
		</property>
		<property name="logService">
			<ref bean="logService"/>
		</property>
		<property name="zipService">
			<ref bean="zipService"/>
		</property>
	</bean>
	
		<!-- Proxied statistics service -->
	<bean id="GlobalStatisticsService"  class="org.springframework.aop.framework.ProxyFactoryBean">
      <property name="proxyInterfaces">
         <value>
		      eu.cec.digit.circabc.service.statistics.global.GlobalStatisticsService
   		</value>
      </property>
      <property name="target">
            <ref bean="globalStatisticsService"/>
      </property>
      <property name="interceptorNames">
         <list>
		    <idref local="GlobalStatisticsService_transaction"/>
		    <idref bean="AuditMethodInterceptor"/>
		    <idref bean="GlobalStatisticsService_security"/>
         </list>
      </property>
    </bean>
    
    <!-- Transaction interceptor for NotificationService  -->
	<bean id="GlobalStatisticsService_transaction" class="org.springframework.transaction.interceptor.TransactionInterceptor">
         <property name="transactionManager">
            <ref bean="transactionManager"/>
         </property>
         <property name="transactionAttributes">
            <props>
                <prop key="get*">${server.transaction.mode.readOnly}</prop>
                <prop key="*">${server.transaction.mode.default}</prop>
            </props>
        </property>
	</bean>
	
	<!-- External Repositories Management Service definitions -->
    <bean id="externalRepositoriesManagementService" class="eu.cec.digit.circabc.repo.external.repositories.ExternalRepositoriesManagementServiceImpl" init-method="init">
		<property name="nodeService">
			<ref bean="NodeService"/>
		</property>
		<property name="transactionService">
			<ref bean="TransactionService"/>
		</property>
		<property name="contentService">
			<ref bean="ContentService"/>
		</property>
		<property name="userNameResolver">
			<ref bean="userNameResolver"/>
		</property>
		<property name="proxyTicketResolver">
			<ref bean="proxyTicketResolver"/>
		</property>
<!-- 		<property name="minutesToCheck"> -->
<!-- 			<value>30</value> -->
<!-- 		</property> -->
		<property name="operational">
			<value>${external.repositories.operational}</value>
		</property>
		<property name="applicationId">
			<value>${external.repositories.hrs.application.id}</value>
		</property>
		<property name="uploadUrl">
			<value>${external.repositories.upload.address}</value>
		</property>
		<property name="endpointBaseAddress">
			<value>${external.repositories.endpoint}</value>
		</property>
	</bean>
	
	<bean id="ExternalRepositoriesManagementService" class="org.springframework.aop.framework.ProxyFactoryBean">
      <property name="proxyInterfaces">
         <value>
		      eu.cec.digit.circabc.service.external.repositories.ExternalRepositoriesManagementService
   		</value>
      </property>
      <property name="target">
            <ref bean="externalRepositoriesManagementService"/>
      </property>
      <property name="interceptorNames">
         <list>
		    <idref local="ExternalRepositoriesManagementService_transaction"/>
		    <idref bean="AuditMethodInterceptor"/>
		    <idref bean="ExternalRepositoriesManagementService_security"/>
         </list>
      </property>
    </bean>
    
	<bean id="ExternalRepositoriesManagementService_transaction" class="org.springframework.transaction.interceptor.TransactionInterceptor">
         <property name="transactionManager">
            <ref bean="transactionManager"/>
         </property>
         <property name="transactionAttributes">
            <props>
                <prop key="get*">${server.transaction.mode.readOnly}</prop>
                <prop key="*">${server.transaction.mode.default}</prop>
            </props>
        </property>
	</bean>
	
	
	<bean id="autoUploadManagementService" class="eu.cec.digit.circabc.repo.config.auto.upload.AutoUploadManagementServiceImpl">
		<property name="actionService">
			<ref bean="ActionService"/>
		</property>
		<property name="ruleService">
			<ref bean="RuleService"/>
		</property>
		<property name="autoUploadConfigurationService">
			<ref bean="autoUploadConfigurationDaoService"/>
		</property>
		<property name="nodeService">
			<ref bean="NodeService"/>
		</property>
		<property name="contentService">
			<ref bean="ContentService"/>
		</property>
		<property name="logService">
			<ref bean="logService"/>
		</property>
		<property name="cociContentBusinessSrv">
			<ref bean="CociContentBusinessSrv"/>
		</property>
		<property name="notificationService">
			<ref bean="NotificationService"/>
		</property>
		<property name="transactionService">
			<ref bean="TransactionService"/>
		</property>
		<property name="fileFolderService">
			<ref bean="fileFolderService"/>
		</property>
		<property name="mimetypeService">
			<ref bean="MimetypeService"/>
		</property>
		<property name="circabcLockService">
			<ref bean="circabcLockService"/>
		</property>
	</bean>
	
	<!-- Proxied statistics service -->
	<bean id="AutoUploadManagementService"  class="org.springframework.aop.framework.ProxyFactoryBean">
      <property name="proxyInterfaces">
         <value>
		      eu.cec.digit.circabc.service.config.auto.upload.AutoUploadManagementService
   		</value>
      </property>
      <property name="target">
            <ref bean="autoUploadManagementService"/>
      </property>
      <property name="interceptorNames">
         <list>
		    <idref local="AutoUploadManagementService_transaction"/>
		    <idref bean="AuditMethodInterceptor"/>
		    <idref bean="AutoUploadManagementService_security"/>
         </list>
      </property>
    </bean>
    
    <!-- Transaction interceptor for NotificationService  -->
	<bean id="AutoUploadManagementService_transaction" class="org.springframework.transaction.interceptor.TransactionInterceptor">
         <property name="transactionManager">
            <ref bean="transactionManager"/>
         </property>
         <property name="transactionAttributes">
            <props>
                <prop key="get*">${server.transaction.mode.readOnly}</prop>
                <prop key="*">${server.transaction.mode.default}</prop>
            </props>
        </property>
	</bean>
	
</beans>
